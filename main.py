
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, ConversationHandler, filters

import os

ASK_NAME, ASK_EMAIL = range(2)
user_data = {}

TOKEN = 7703194563:AAEc0DU_QdCwFCc2b5h_G37v5YwmZa3XWD0

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –≤ StylePro! –î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è üòä\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    return ASK_NAME

async def ask_email(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data[update.effective_user.id] = {"name": update.message.text}
    await update.message.reply_text("–ê —Ç–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ e-mail, –∫—É–¥–∞ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å—Ç–∏–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã ‚ú®")
    return ASK_EMAIL

async def finish(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data[update.effective_user.id]["email"] = update.message.text
    name = user_data[update.effective_user.id]["name"]
    email = user_data[update.effective_user.id]["email"]

    await update.message.reply_text(f"–°–ø–∞—Å–∏–±–æ, {name}! ‚ú® –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω. –°–∫–æ—Ä–æ –ø–æ–ª—É—á–∏—à—å —Å—Ç–∏–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –Ω–∞ {email} üíå")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–∫–µ–π, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ /start üòâ")
    return ConversationHandler.END

if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_email)],
            ASK_EMAIL: [MessageHandler(filters.TEXT & ~filters.COMMAND, finish)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()
